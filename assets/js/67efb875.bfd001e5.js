"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[409],{833:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"concepts/routes","title":"Routes","description":"Routes allow nodes in a drasyl network to reach external IP networks.","source":"@site/docs/concepts/routes.md","sourceDirName":"concepts","slug":"/concepts/routes","permalink":"/concepts/routes","draft":false,"unlisted":false,"editUrl":"https://github.com/drasyl/docs.drasyl.org/blob/master/docs/concepts/routes.md","tags":[],"version":"current","lastUpdatedAt":1753787799000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Policies","permalink":"/concepts/policies"}}');var r=t(4848),i=t(8453);const o={},l="Routes",d={},a=[{value:"Concept",id:"concept",level:2},{value:"Route Attributes",id:"route-attributes",level:2},{value:"<code>dest</code>",id:"dest",level:3},{value:"<code>gw</code>",id:"gw",level:3},{value:"Enable IP forwarding",id:"enable-ip-forwarding",level:4},{value:"Configure iptables",id:"configure-iptables",level:4},{value:"<code>groups</code>",id:"groups",level:3},{value:"Example Route Configuration",id:"example-route-configuration",level:2}];function c(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"routes",children:"Routes"})}),"\n",(0,r.jsx)(n.p,{children:"Routes allow nodes in a drasyl network to reach external IP networks."}),"\n",(0,r.jsx)(n.h2,{id:"concept",children:"Concept"}),"\n",(0,r.jsxs)(n.p,{children:["Each route defines how traffic to an external destination is forwarded through a specific gateway node.",(0,r.jsx)(n.br,{}),"\n","Communication is only allowed for nodes belonging to permitted groups."]}),"\n",(0,r.jsx)(n.p,{children:"Route enforcement is decentralized: both the sending node and the gateway apply the rules independently."}),"\n",(0,r.jsx)(n.p,{children:"Currently, the gateway must be a Linux system with IP forwarding and NAT enabled."}),"\n",(0,r.jsx)(n.h2,{id:"route-attributes",children:"Route Attributes"}),"\n",(0,r.jsx)(n.p,{children:"Each route entry consists of the following attributes:"}),"\n",(0,r.jsx)(n.h3,{id:"dest",children:(0,r.jsx)(n.code,{children:"dest"})}),"\n",(0,r.jsx)(n.p,{children:"The destination network (in CIDR notation) that should be reachable through this route."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Must be unique within a drasyl network."}),"\n",(0,r.jsx)(n.li,{children:"Must be a network address (not a host address)."}),"\n",(0,r.jsx)(n.li,{children:"Overlapping routes are resolved by prefix length (longest match wins)."}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{title:"Duplicate Routes",type:"warning",children:(0,r.jsxs)(n.p,{children:["Defining the same ",(0,r.jsx)(n.code,{children:"dest"})," in multiple networks on the same device results in undefined behavior. Run ",(0,r.jsx)(n.code,{children:"drasyl status"})," in the terminal to check if duplicate routes exist and which one is currently applied."]})}),"\n",(0,r.jsx)(n.h3,{id:"gw",children:(0,r.jsx)(n.code,{children:"gw"})}),"\n",(0,r.jsxs)(n.p,{children:["The public key (",(0,r.jsx)(n.code,{children:"pk"}),") of the node that will act as a gateway."]}),"\n",(0,r.jsx)(n.p,{children:"This device must:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Be part of the current drasyl network."}),"\n",(0,r.jsx)(n.li,{children:"Run a Linux system."}),"\n",(0,r.jsx)(n.li,{children:"Have IP forwarding enabled and act as a NAT router."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"To prepare the gateway device, perform the following steps:"}),"\n",(0,r.jsx)(n.h4,{id:"enable-ip-forwarding",children:"Enable IP forwarding"}),"\n",(0,r.jsxs)(n.p,{children:["Edit ",(0,r.jsx)(n.code,{children:"/etc/sysctl.conf"})," to uncomment:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"net.ipv4.ip_forward=1\n"})}),"\n",(0,r.jsx)(n.p,{children:"Apply the change immediately:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"sudo sysctl -w net.ipv4.ip_forward=1\n"})}),"\n",(0,r.jsx)(n.h4,{id:"configure-iptables",children:"Configure iptables"}),"\n",(0,r.jsx)(n.p,{children:"Set the correct interface names (adjust to your system):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"PHY_IFACE=eth0\nDRASYL_IFACE=drasyl230whb89k\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The name of the drasyl interface can be retrieved using the drasyl UI or the terminal by running ",(0,r.jsx)(n.code,{children:"drasyl status"}),":"]}),"\n",(0,r.jsx)(n.p,{children:"Then add NAT and forwarding rules:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"sudo iptables -t nat -A POSTROUTING -o $PHY_IFACE -j MASQUERADE\nsudo iptables -A FORWARD -i $PHY_IFACE -o $DRASYL_IFACE -m state --state RELATED,ESTABLISHED -j ACCEPT\nsudo iptables -A FORWARD -i $DRASYL_IFACE -o $PHY_IFACE -j ACCEPT\n"})}),"\n",(0,r.jsx)(n.p,{children:"Make the rules persistent:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'sudo apt install iptables-persistent\nsudo bash -c "iptables-save > /etc/iptables/rules.v4"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"groups",children:(0,r.jsx)(n.code,{children:"groups"})}),"\n",(0,r.jsx)(n.p,{children:"A list of node groups allowed to use this route.\nOnly nodes in one of the listed groups may send traffic to the specified destination."}),"\n",(0,r.jsx)(n.p,{children:"If omitted, the route is accessible to all nodes in the network."}),"\n",(0,r.jsx)(n.h2,{id:"example-route-configuration",children:"Example Route Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[route]]\ndest   = "192.168.188.0/24"\ngw     = "689a1b9f5efcb861ac67ce185ddb2396444326e12fe1df353731416f5a3a2706" # john-desktop\ngroups = [ "admins" ]\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(6540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);